{\rtf1\ansi\ansicpg1252\uc1\deff0\stshfdbch0\stshfloch0\stshfhich0\stshfbi0\deflang1033\deflangfe1033{\fonttbl{\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}{\f38\froman\fcharset238\fprq2 Times New Roman CE;}
{\f39\froman\fcharset204\fprq2 Times New Roman Cyr;}{\f41\froman\fcharset161\fprq2 Times New Roman Greek;}{\f42\froman\fcharset162\fprq2 Times New Roman Tur;}{\f43\froman\fcharset177\fprq2 Times New Roman (Hebrew);}
{\f44\froman\fcharset178\fprq2 Times New Roman (Arabic);}{\f45\froman\fcharset186\fprq2 Times New Roman Baltic;}{\f46\froman\fcharset163\fprq2 Times New Roman (Vietnamese);}}{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;
\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;
\red128\green128\blue128;\red192\green192\blue192;}{\stylesheet{\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 \snext0 Normal;}{\*\cs10 \additive \ssemihidden 
Default Paragraph Font;}{\*\ts11\tsrowd\trftsWidthB3\trpaddl108\trpaddr108\trpaddfl3\trpaddft3\trpaddfb3\trpaddfr3\trcbpat1\trcfpat1\tscellwidthfts0\tsvertalt\tsbrdrt\tsbrdrl\tsbrdrb\tsbrdrr\tsbrdrdgl\tsbrdrdgr\tsbrdrh\tsbrdrv 
\ql \li0\ri0\widctlpar\aspalpha\aspnum\faauto\adjustright\rin0\lin0\itap0 \fs20\lang1024\langfe1024\cgrid\langnp1024\langfenp1024 \snext11 \ssemihidden Normal Table;}}{\*\latentstyles\lsdstimax156\lsdlockeddef0}{\*\rsidtbl \rsid4475459}{\*\generator Micro
soft Word 11.0.5604;}{\info{\author TvmServer}{\operator TvmServer}{\creatim\yr2005\mo1\dy17\hr18\min11}{\revtim\yr2005\mo1\dy17\hr18\min11}{\version2}{\edmins0}{\nofpages3}{\nofwords674}{\nofchars3846}{\*\company Dundas India}{\nofcharsws4511}
{\vern24689}}\widowctrl\ftnbj\aenddoc\noxlattoyen\expshrtn\noultrlspc\dntblnsbdb\nospaceforul\hyphcaps0\horzdoc\dghspace120\dgvspace120\dghorigin1701\dgvorigin1984\dghshow0\dgvshow3\jcompress\viewkind1\viewscale116\viewzk2\nolnhtadjtbl\rsidroot4475459 
\fet0\sectd \linex0\sectdefaultcl\sftnbj {\*\pnseclvl1\pnucrm\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl2\pnucltr\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl3\pndec\pnstart1\pnindent720\pnhang {\pntxta .}}{\*\pnseclvl4
\pnlcltr\pnstart1\pnindent720\pnhang {\pntxta )}}{\*\pnseclvl5\pndec\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl6\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl7\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}
{\pntxta )}}{\*\pnseclvl8\pnlcltr\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}{\*\pnseclvl9\pnlcrm\pnstart1\pnindent720\pnhang {\pntxtb (}{\pntxta )}}\pard\plain \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 
\fs24\lang1033\langfe1033\cgrid\langnp1033\langfenp1033 {\b\fs48\cf2\insrsid4475459 COXToolTipCtrl Overview}{\b\fs48\insrsid4475459 
\par }{\b\fs16\insrsid4475459 Copyright \'a9}{\b\fs16\insrsid4475459  The Code Project}{\b\fs16\insrsid4475459  1997-1999, All Rights Reserved
\par }{\insrsid4475459 
\par }{\b\insrsid4475459 COXToolTipCtrl}{\insrsid4475459  is an }{\b\insrsid4475459 extended tooltip control}{\insrsid4475459  that allows }{\b\insrsid4475459 multiline}{\insrsid4475459  tooltips, plus extended tooltip text. Extended tooltip text is }{
\b\insrsid4475459 extra text}{\insrsid4475459  that is
 displayed if the user clicks on the tooltip window. If the tooltip contains extended text (as well as a standard tooltip string) then the info window will contain a small arrow that prompts the user to click on the window. Once the window is clicked, the
 extended text is shown. If the window is clicked again then the window reduces to showing just the standard text.
\par 
\par The maximum width of the tooltips can be specified, and if the info text is too big to fit within these bounds then the text will be wrapped over multiple lines. The control also allows you to specify a different }{\b\insrsid4475459 
text and background colors}{\insrsid4475459  for the tooltips, and the }{\b\insrsid4475459 display font can also be changed}{\insrsid4475459 .
\par 
\par 
\par This class is a direct replacement for the }{\b\insrsid4475459 CToolTipCtrl}{\insrsid4475459  class. It incorporates the entire API of the standard CToolTipCtrl, and introduces new features not found in the standard tooltip.
\par 
\par The control is used just like any other tooltip control. To use the tool simply call }{\ul\cf2\insrsid4475459 Create}{\insrsid4475459 (...) and specify the parent window of the tool, then add tools to the control using the }{\ul\cf2\insrsid4475459 AddTool
}{\insrsid4475459 (...) member function. eg. (In a formview or dialog)
\par 
\par }\pard \ql \li360\ri360\nowidctlpar\faauto\rin360\lin360\itap0 {\i\insrsid4475459 tooltip.Create(this)
\par tooltip.AddTool(GetDlgItem(IDC_CONTROL), _T("Tooltip text\\rThis is the extended\\ntooltip text"));
\par }{\insrsid4475459 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid4475459 where ID_CONTROL is the ID of a control.
\par 
\par To specify extended text for a tooltip, simply }{\b\insrsid4475459 append a '\\r'}{\insrsid4475459  after your tooltip text, and then append the extended tooltip info.
\par 
\par As with the standard tooltip control you can specify the actual text for the tool at creation time (as shown above), or you can specify the LPSTR_TEXTCALLBACK value and provide a TTN_NEEDTEXT handler to return the text dynamically at runtime.
\par 
\par To handle the TTN_NEEDTEXT message, you will need to add a message handler in the parent window, and an entry in the message map, eg. in you view or form
\par 
\par }\pard \ql \li360\ri360\nowidctlpar\faauto\rin360\lin360\itap0 {\i\insrsid4475459 BEGIN_MESSAGE_MAP(CMyDlg, CDialog)
\par . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
\par ON_NOTIFY_EX( TTN_NEEDTEXT, 0, OnToolTipNotify)
\par END_MESSAGE_MAP()
\par 
\par BOOL CMyDlg::OnInitDialog()
\par \{
\par \~\~\~ CDialog::OnInitDialog();
\par \~\~\~ tooltip.Create(this);
\par \~\~\~ tooltip.AddTool(GetDlgItem(IDC_CONTROL), LPSTR_TEXTCALLBACK);
\par \~\~\~ . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . . 
\par \}
\par 
\par BOOL CMyDlg::OnToolTipNotify(UINT id, NMHDR* pNMHDR, LRESULT* pResult)
\par \{ 
\par \~\~\~ TOOLTIPTEXT *pTTT = (TOOLTIPTEXT *)pNMHDR; 
\par \~\~\~ UINT nID = pNMHDR->idFrom;
\par 
\par \~\~\~ if (nID == IDC_CONTROL)\~\~\~ // Fill in the text buffer
\par \~\~\~ \{
\par \~\~\~\~\~\~\~ _tcscpy(pTTT->szText, _T("Tooltip text\\rExtended tooltip text"));
\par \~\~\~\~\~\~\~ return TRUE;
\par \~\~\~ \}
\par 
\par \~\~\~ return FALSE;
\par \}
\par }{\insrsid4475459 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid4475459 You can also supply text two alternate ways, either by supplying a string resource
\par 
\par }\pard \ql \li360\ri360\nowidctlpar\faauto\rin360\lin360\itap0 {\i\insrsid4475459 pTTT->lpszText = MAKEINTRESOURCE(nID);
\par pTTT->hinst = AfxGetResourceHandle(); 
\par return TRUE;
\par }{\insrsid4475459 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid4475459 or by supplying a pointer to the text:
\par 
\par }\pard \ql \li360\ri360\nowidctlpar\faauto\rin360\lin360\itap0 {\i\insrsid4475459 pTTT->lpszText = _T("Tooltip text\\rExtended tooltip text");
\par return TRUE;
\par 
\par }{\insrsid4475459 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\insrsid4475459 Newline characters ('\\n') can be embedded anywhere}{\insrsid4475459 
 within the text or extended text to produce a multiline tooltip. If the width of the tooltip window is specified using }{\ul\cf2\insrsid4475459 SetMaxTipWidth}{\insrsid4475459 
() then the tooltip text will be wrapped to this length, and if necessary displayed on more than one line.
\par 
\par To change the font of the tooltips simply use the }{\b\insrsid4475459 SetFont}{\insrsid4475459 () member function. 
\par 
\par The }{\ul\cf2\insrsid4475459 GetToolInfo}{\insrsid4475459 /}{\ul\cf2\insrsid4475459 SetToolInfo}{\insrsid4475459  functions, and the HitTest functions are very similar to the CToolTipCtrl versions except that they use a }{\b\insrsid4475459 OXTOOLINFO}{
\insrsid4475459  structure instead of a TOOLINFO structure. This structure is defined as
\par 
\par }\pard \ql \li360\ri360\nowidctlpar\faauto\rin360\lin360\itap0 {\i\insrsid4475459 struct OXTOOLINFO : public TOOLINFO
\par \{
\par #if (_WIN32_IE < 0x0300)
\par \~\~\~ LPARAM lParam; }{\i\cf11\insrsid4475459 //Application defined value that is associated with the tool}{\i\insrsid4475459 
\par #endif
\par \~\~\~ int nWidth; }{\i\cf11\insrsid4475459 //Width of box, or 0 for default}{\i\insrsid4475459 
\par \~\~\~ COLORREF clrTextColor; }{\i\cf11\insrsid4475459 //text color}{\i\insrsid4475459 
\par \~\~\~ COLORREF clrBackColor; }{\i\cf11\insrsid4475459 //background color}{\i\insrsid4475459 
\par \}
\par }{\insrsid4475459 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid4475459 and so is very similar to the standard TOOLINFO, and is used in the same way, with the exception that the uFlags member is not (yet) used.
\par 
\par To change the color of an individual tip, use the }{\ul\cf2\insrsid4475459 GetToolInfo}{\insrsid4475459 /}{\ul\cf2\insrsid4475459 SetToolInfo}{\insrsid4475459  functions
\par 
\par }\pard \ql \li360\ri360\nowidctlpar\faauto\rin360\lin360\itap0 {\i\insrsid4475459 OXTOOLINFO ToolInfo;
\par if (m_toolTip.GetToolInfo(ToolInfo, GetDlgItem(IDC_CONTROL)))
\par \{
\par \~\~\~ ToolInfo.clrBackColor = RGB(255, 255, 255);
\par \~\~\~ ToolInfo.clrTextColor = RGB( 0, 0, 255);
\par \~\~\~ m_toolTip.SetToolInfo(&ToolInfo);
\par \}}{\insrsid4475459 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\insrsid4475459 
\par 
\par }{\b\insrsid4475459 Dependencies:
\par }\pard \ql \li360\ri360\nowidctlpar\faauto\rin360\lin360\itap0 {\insrsid4475459 #include "}{\cf6\insrsid4475459 OXToolTipCtrl.h}{\insrsid4475459 "
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\b\insrsid4475459 
\par Source code files:
\par }\pard \ql \li360\ri360\nowidctlpar\faauto\rin360\lin360\itap0 {\insrsid4475459 "}{\cf6\insrsid4475459 OXToolTipCtrl.cpp}{\insrsid4475459 "
\par 
\par 
\par }\pard \ql \li0\ri0\nowidctlpar\faauto\rin0\lin0\itap0 {\fs20\insrsid4475459 
\par }}